{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vkohl\\\\OneDrive\\\\Documents\\\\Development\\\\Web\\\\Code\\\\FullStack Projects\\\\Smart-Flame-Sensor-master\\\\website\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Grid from \"./components/Grid\"; // Your grid component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [sensorData, setSensorData] = useState({});\n  const [path, setPath] = useState(Array(9).fill(\"normal\"));\n  useEffect(() => {\n    // Connect to WebSocket server\n    const ws = new WebSocket(\"ws://localhost:8080\");\n    ws.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n    ws.onmessage = event => {\n      const data = JSON.parse(event.data); // Parse JSON data from Arduino\n      console.log(\"Sensor Data Received:\", data);\n      setSensorData(data); // Update the sensor data state\n      updateGrid(data); // Update the grid\n    };\n    ws.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n    return () => {\n      ws.close(); // Cleanup WebSocket connection\n    };\n  }, []);\n  const updateGrid = data => {\n    const temp = Array(9).fill(\"normal\");\n    let index = 0;\n    for (const [key, value] of Object.entries(data)) {\n      if (value === 0) {\n        temp[index] = \"fire\"; // Mark cells as \"fire\" where flame is detected\n      }\n      index++;\n    }\n    setPath(temp); // Update the grid state\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: \"Smart Fire Evacuation System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Items\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        path: path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H009P+IaC1dAd/UGmGEhpLuOj70=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Grid","jsxDEV","_jsxDEV","App","_s","sensorData","setSensorData","path","setPath","Array","fill","ws","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","updateGrid","onclose","close","temp","index","key","value","Object","entries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vkohl/OneDrive/Documents/Development/Web/Code/FullStack Projects/Smart-Flame-Sensor-master/website/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Grid from \"./components/Grid\"; // Your grid component\n\nfunction App() {\n  const [sensorData, setSensorData] = useState({});\n  const [path, setPath] = useState(Array(9).fill(\"normal\"));\n\n  useEffect(() => {\n    // Connect to WebSocket server\n    const ws = new WebSocket(\"ws://localhost:8080\");\n\n    ws.onopen = () => {\n      console.log(\"Connected to WebSocket server\");\n    };\n\n    ws.onmessage = (event) => {\n      const data = JSON.parse(event.data); // Parse JSON data from Arduino\n      console.log(\"Sensor Data Received:\", data);\n      setSensorData(data); // Update the sensor data state\n      updateGrid(data); // Update the grid\n    };\n\n    ws.onclose = () => {\n      console.log(\"WebSocket connection closed\");\n    };\n\n    return () => {\n      ws.close(); // Cleanup WebSocket connection\n    };\n  }, []);\n\n  const updateGrid = (data) => {\n    const temp = Array(9).fill(\"normal\");\n    let index = 0;\n\n    for (const [key, value] of Object.entries(data)) {\n      if (value === 0) {\n        temp[index] = \"fire\"; // Mark cells as \"fire\" where flame is detected\n      }\n      index++;\n    }\n\n    setPath(temp); // Update the grid state\n  };\n\n  return (\n    <div className=\"Background\">\n      <div className=\"Header\">Smart Fire Evacuation System</div>\n      <div className=\"Items\">\n        <Grid path={path} /> {/* Display the grid */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACU,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC,CAAC;EAEzDZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,EAAE,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;IAE/CD,EAAE,CAACE,MAAM,GAAG,MAAM;MAChBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC9C,CAAC;IAEDJ,EAAE,CAACK,SAAS,GAAIC,KAAK,IAAK;MACxB,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACrCJ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEG,IAAI,CAAC;MAC1CZ,aAAa,CAACY,IAAI,CAAC,CAAC,CAAC;MACrBG,UAAU,CAACH,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC;IAEDP,EAAE,CAACW,OAAO,GAAG,MAAM;MACjBR,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAC;IAC5C,CAAC;IAED,OAAO,MAAM;MACXJ,EAAE,CAACY,KAAK,CAAC,CAAC,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,UAAU,GAAIH,IAAI,IAAK;IAC3B,MAAMM,IAAI,GAAGf,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,QAAQ,CAAC;IACpC,IAAIe,KAAK,GAAG,CAAC;IAEb,KAAK,MAAM,CAACC,GAAG,EAAEC,KAAK,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACX,IAAI,CAAC,EAAE;MAC/C,IAAIS,KAAK,KAAK,CAAC,EAAE;QACfH,IAAI,CAACC,KAAK,CAAC,GAAG,MAAM,CAAC,CAAC;MACxB;MACAA,KAAK,EAAE;IACT;IAEAjB,OAAO,CAACgB,IAAI,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEtB,OAAA;IAAK4B,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACzB7B,OAAA;MAAK4B,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1DjC,OAAA;MAAK4B,SAAS,EAAC,OAAO;MAAAC,QAAA,gBACpB7B,OAAA,CAACF,IAAI;QAACO,IAAI,EAAEA;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC/B,EAAA,CAlDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}